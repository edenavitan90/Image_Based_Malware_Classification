from sklearn import metrics
import matplotlib.pyplot as plt
import numpy as np

malware_family = {"Adialer.C": 0, "Agent.FYI": 1, "Allaple.A": 2, "Allaple.L": 3, "Alueron.gen!J": 4, "Autorun.K": 5, "C2LOP.gen!g": 6,
                  "C2LOP.P": 7, "Dialplatform.B": 8, "Dontovo.A": 9, "Fakerean": 10, "Instantaccess": 11, "Lolyda.AA1": 12, "Lolyda.AA2": 13,
                  "Lolyda.AA3": 14, "Lolyda.AT": 15, "Malex.gen!J": 16, "Obfuscator.AD": 17, "Rbot!gen": 18, "Skintrim.N": 19, "Swizzor.gen!E": 20,
                  "Swizzor.gen!I": 21, "VB.AT": 22, "Wintrim.BX": 23, "Yuner.A": 24}

class_names = np.array(["Adialer.C", "Agent.FYI", "Allaple.A", "Allaple.L", "Alueron.gen!J", "Autorun.K", "C2LOP.gen!g",
                  "C2LOP.P", "Dialplatform.B", "Dontovo.A", "Fakerean", "Instantaccess", "Lolyda.AA1", "Lolyda.AA2",
                  "Lolyda.AA3", "Lolyda.AT", "Malex.gen!J", "Obfuscator.AD", "Rbot!gen", "Skintrim.N", "Swizzor.gen!E",
                  "Swizzor.gen!I", "VB.AT", "Wintrim.BX", "Yuner.A"])


def plot_confusion_matrix(cm, title, labels):
    cmp = metrics.ConfusionMatrixDisplay(cm, display_labels=labels)
    fig, ax = plt.subplots(figsize=(17, 17))
    cmp.plot(ax=ax, values_format='.0f')
    plt.title(title)
    plt.xticks(rotation=90)


def plot_hist(class_names, train_count, test_count, cm_train, cm_test):
    train_accuracy_by_family = np.diag(cm_train) / train_count
    test_accuracy_by_family = np.diag(cm_test) / test_count

    fig, ax = plt.subplots(figsize=(16, 10))
    labels = np.arange(len(class_names))
    width = 0.25
    ax.bar(labels - width / 2 - 0.02, test_accuracy_by_family, color="#a8c9a7", width=width, align='center')
    ax.bar(labels + width / 2 + 0.02, train_accuracy_by_family, color="#b55e5f", width=width, align='center')
    fig.tight_layout()
    ax.set_xticks(labels)
    plt.xlim([-1, len(class_names)])
    ax.set_xticklabels(class_names)
    plt.xticks(rotation=90)
    plt.legend(["Test", "Train"], prop={'size': 16})
    plt.ylim([0, 1.11])
    plt.grid(True)
    plt.show()